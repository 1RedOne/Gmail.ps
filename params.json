{"name":"Gmail.ps","tagline":"A PowerShell module for accessing your Gmail.","body":"# Gmail for PowerShell\r\n\r\nA PowerShell module for managing your Gmail, with all the tools you'll need. Search, \r\nread and send emails, archive, mark as read/unread, delete emails, \r\nand manage labels.\r\n\r\n**This module is still under development.**\r\n\r\n## Table of contents\r\n\r\n* [Install](#install)\r\n* [Features](#features)\r\n* [Get help](#get-help)\r\n* [Commands](#commands)\r\n\t* [New-GmailSession](#new-gmailsession)\r\n\t* [Remove-GmailSession](#remove-gmailsession)\r\n\t* [Invoke-GmailSession](#invoke-gmailsession)\r\n\t* [Get-GmailSession](#get-gmailsession)\r\n\t* [Clear-GmailSession](#clear-gmailsession)\r\n\t* [Get-Mailbox](#get-mailbox)\r\n\t* [Get-Message](#get-message)\r\n\t* [Update-Message](#update-message)\r\n\t* [Receive-Message](#receive-message)\r\n\t* [Move-Message](#move-message)\r\n\t* [Remove-Message](#remove-message)\r\n\t* [Measure-Message](#measure-message)\r\n\t* [Get-Conversation](#get-conversation)\r\n\t* [Save-Attachment](#save-attachment)\r\n\t* [Get-Label](#get-label)\r\n\t* [New-Label](#new-label)\r\n\t* [Set-Label](#set-label)\r\n\t* [Remove-Label](#remove-label)\r\n* [Roadmap](#roadmap)\r\n* [History](#history)\r\n* [Author](#author)\r\n* [Third Party Libraries](#third-party-libraries)\r\n* [Contributing](#contributing)\r\n* [License](#license)\r\n\r\n## Install\r\n\r\nIf you have [PsGet](http://psget.net/) installed you can simply execute:\r\n\r\n```powershell\r\nInstall-Module Gmail.ps\r\n```\r\n\r\nOr install it manually:\r\n\r\n    git clone https://github.com/nikoblag/Gmail.ps.git\r\n    cd Gmail.ps\r\n    .\\install.ps1\r\n\r\n## Features\r\n\r\n* Read emails\r\n* Search emails\r\n* (Update) emails: label, archive, delete, mark as read/unread/spam, star\r\n* Manage labels\r\n* Move between labels/mailboxes\r\n* Automatic authentication, using the Windows Credential Manager\r\n\r\n## Get help\r\n\r\n* List of all available commands\r\n\r\n    ```powershell\r\n\tGet-Command -Module Gmail.ps\r\n    ```\r\n\r\n* Help for a specific command.\r\n\r\n    ```powershell\r\n\tGet-Help <command>\r\n    ```\r\n\r\n## Commands\r\n\r\n***For more detailed information about a command use the help.***\r\n\r\n### New-GmailSession\r\n\r\nOpens a connection to a Gmail account using the specified credentials and creates a new session. If a generic credential is \r\ncreated using the Windows Credential Manager (address: `Gmail.ps:default`), a session is automatically created using the \r\nstored credentials each time the cmdlet is executed without a `-Credential` parameter.\r\n\r\n```powershell\r\nNew-GmailSession [[-Credential] <PSCredential>] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName          | Pipeline input | Default\r\n---           | ---            | ---\r\n`-Credential` | No             | `Get-StoredCredential Gmail.ps:default` or `Get-Credential`\r\n\r\n#### Examples\r\n\r\n1. Authenticating a Gmail session using the stored credential in the `Gmail.ps:default` entry. \r\n   If there is no credential stored a prompt for username and password will be displayed.\r\n\r\n    ```powershell\r\n\t$gmail = New-GmailSession\r\n\t# play with your gmail...\r\n    ```\r\n\r\n### Remove-GmailSession\r\n\r\nCloses the connection to Gmail and destroys the session.\r\n\r\n```powershell\r\nRemove-GmailSession [-Session] <ImapClient> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n\r\n#### Examples\r\n\r\n1. Closing an already opened connection to a Gmail account:\r\n\r\n    ```powershell\r\n\t$gmail | Remove-GmailSession\r\n    ```\r\n\r\n### Invoke-GmailSession\r\n\r\nCreates a new Gmail session and passes it to a script block. Once the block is executed, the session is automatically closed.\r\n\r\n```powershell\r\nInvoke-GmailSession [[-Credential] <PSCredential>] [-ScriptBlock] <ScriptBlock> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName           | Pipeline input | Default\r\n---            | ---            | ---\r\n`-Credential`  | No             | `Get-StoredCredential Gmail.ps:default` or `Get-Credential`\r\n`-ScriptBlock` | No             |\r\n\r\n#### Examples\r\n\r\n1. Creates a Gmail session, returns the number of messages in the Inbox and then closes the session.\r\n   The automatically created session can be accessed inside the script block via the `$args` variable.\r\n\r\n    ```powershell\r\n\tInvoke-GmailSession -ScriptBlock {\r\n\t    $args | Count-Message\r\n\t}\r\n    ```\r\n\r\n2. Creates a Gmail session, returns all the labels used in that account and then closes the session.\r\n   The automatically created session can be accessed inside the script block via the `$gmail` variable.\r\n\r\n    ```powershell\r\n\tInvoke-GmailSession -ScriptBlock {\r\n\t    param($gmail)\r\n\t    $gmail | Get-Label\r\n\t}\r\n    ```\r\n\r\n### Get-GmailSession\r\n\r\nReturns a list of all opened Gmail sessions.\r\n\r\n```powershell\r\nGet-GmailSession\r\n```\r\n\r\n### Clear-GmailSession\r\n\r\nCloses all opened Gmail sessions.\r\n\r\n```powershell\r\nClear-GmailSession\r\n```\r\n\r\n### Get-Mailbox\r\n\r\nReturns the `Inbox` if no parameters are specified, an existing Label or one of the default \r\nGmail folders (`All Mail`, `Starred`, `Drafts`, `Important`, `Sent Mail`, `Spam`).\r\n\r\n> **Alias:** `Select-Mailbox`\r\n\r\n```powershell\r\nGet-Mailbox -Session <ImapClient> [[-Name] <String>] [<CommonParameters>]\r\n\r\nGet-Mailbox -Session <ImapClient> [-Label <String>] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input          | Default (List of possible values)\r\n---        | ---                     | ---\r\n`-Session` | ByValue, ByPropertyName |\r\n`-Name`    | ByPropertyName          | `Inbox` (`All Mail`, `Starred`, `Drafts`, `Important`, `Sent Mail`, `Spam`)\r\n`-Label`   | ByPropertyName          |\r\n\r\n#### Examples\r\n\r\n1. Get the unread messages in the inbox:\r\n\r\n    ```powershell\r\n\t$inbox = $gmail | Get-Mailbox\r\n\t$inbox | Get-Message -Unread\r\n    ```\r\n\r\n2. Get the messages marked as Important by Gmail:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox \"Important\" | Get-Message\r\n    ```\r\n\r\n### Get-Message\r\n\r\nReturns a (filtered) list of the messages inside a selected mailbox (see [`Get-Mailbox`](#get-mailbox)).\r\nThe returned messages will have their body and attachments downloaded only if the `-Prefetch` parameter is specified. \r\n\r\nEvery listed message has a set of flags indicating the message's status and properties.\r\n\r\nFlag | Meaning\r\n---  | ---\r\n`u`  | Is unread\r\n`f`  | Is fetched\r\n`i`  | Is important\r\n`s`  | Is starred\r\n`a`  | Has attachment\r\n\r\nAny flag may be unset. An unset flag is the equivalent of \"is not\" and is represented as a `-` character.\r\n`--i-a` means the message is not Unread, is not Fetched, is Important, is not Starred and has atleast one attachment.\r\n\r\nSupports automatic name completion for the existing labels.\r\n\r\n> **Alias:** `Filter-Message`\r\n\r\n```powershell\r\nGet-Message [-Session] <ImapClient> \r\n\t\t\t[[-From] <String>] [[-To] <String>] \r\n\t\t\t[[-On] <DateTime>] [[-After] <DateTime>] [[-Before] <DateTime>] \r\n\t\t\t[[-Cc] <String>] [[-Bcc] <String>] \r\n\t\t\t[[-Subject] <String>] [[-Text] <String>] [[-Body] <String>] \r\n\t\t\t[[-Label] <String[]>] [[-FileName] <String>] [[-Category] <String>] \r\n\t\t\t[-Unread ] [-Read ] [-Starred ] [-Unstarred ] [-HasAttachment ] \r\n\t\t\t[-Answered ] [-Draft ] [-Undraft ] [-Prefetch ] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName             | Pipeline input          | Default (List of possible values)\r\n---              | ---                     | ---\r\n`-Session`       | ByValue, ByPropertyName |\r\n`-From`          | No                      | \r\n`-To`            | No                      |\r\n`-On`            | No                      |\r\n`-After`         | No                      |\r\n`-Before`        | No                      |\r\n`-Cc`            | No                      |\r\n`-Bcc`           | No                      |\r\n`-Subject`       | No                      |\r\n`-Text`          | No                      |\r\n`-Body`          | No                      |\r\n`-Label`         | No                      |\r\n`-FileName`      | No                      |\r\n`-Category`      | No                      | *none* (`Primary`, `Personal`, `Social`, `Promotions`, `Updates`, `Forums`)\r\n`-Unread`        | No                      |\r\n`-Read`          | No                      |\r\n`-Starred`       | No                      |\r\n`-Unstarred`     | No                      |\r\n`-HasAttachment` | No                      |\r\n`-Answered`      | No                      |\r\n`-Draft`         | No                      |\r\n`-Undraft`       | No                      |\r\n`-Prefetch`      | No                      |\r\n\r\n#### Examples\r\n\r\n1. Get the unread messages in the inbox:\r\n\r\n    ```powershell\r\n\t$inbox = $gmail | Get-Mailbox\r\n\t$inbox | Get-Message -Unread\r\n    ```\r\n\r\n2. Get the messages marked as Important by Gmail:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox \"Important\" | Get-Message\r\n    ```\r\n\r\n3. Filter with some criteria:\r\n\r\n    ```powershell\r\n\t$inbox | Get-Message -After \"2011-06-01\" -Before \"2012-01-01\"\r\n\t$inbox | Get-Message -On \"2011-06-01\"\r\n\t$inbox | Get-Message -From \"x@gmail.com\"\r\n\t$inbox | Get-Message -To \"y@gmail.com\"\r\n    ```\r\n\r\n4. Combine flags and options:\r\n\r\n    ```powershell\r\n\t$inbox | Get-Message -Unread -From \"myboss@gmail.com\"\r\n    ```\r\n\r\n### Update-Message\r\n\r\nArchives, marks as spam, as read/undead and adds/removes a star from a given message.\r\n\r\n```powershell\r\nUpdate-Message -Session <ImapClient> -Message <MailMessage> [-Read ] [-Star ] [-Archive ] [-Spam ] [<CommonParameters>]\r\n\r\nUpdate-Message -Session <ImapClient> -Message <MailMessage> [-Read ] [-Unstar ] [-Archive ] [-Spam ] [<CommonParameters>]\r\n\r\nUpdate-Message -Session <ImapClient> -Message <MailMessage> [-Unread ] [-Star ] [-Archive ] [-Spam ] [<CommonParameters>]\r\n\r\nUpdate-Message -Session <ImapClient> -Message <MailMessage> [-Unread ] [-Unstar ] [-Archive ] [-Spam ] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName        | Pipeline input\r\n---         | ---\r\n`-Session`  | ByValue, ByPropertyName\r\n`-Message`  | ByValue\r\n`-Read `    | No\r\n`-Unread `  | No\r\n`-Archive ` | No\r\n`-Star `    | No\r\n`-Unstar `  | No\r\n`-Spam `    | No\r\n\r\n#### Examples\r\n\r\n1. Each message can be manipulated using block style. Remember that every message in a conversation/thread will come as a separate message.\r\n\r\n    ```powershell\r\n\t$messages = $inbox | Get-Message -Unread | Select-Object -Last 10\r\n\tforeach ($msg in $messages) {\r\n\t    $msg | Update-Message -Read # you can use -Unread, -Spam, -Star, -Unstar, -Archive too\r\n\t}\r\n    ```\r\n\r\n### Receive-Message\r\n\r\nFetches the whole message from the server (including the body and the attachments).\r\n\r\n```powershell\r\nReceive-Message [-Session] <ImapClient> [-Message] <MailMessage> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n`-Message` | ByValue\r\n\r\n#### Examples\r\n\r\n1. To read the actual body of a message you have to first fetch it from the Gmail servers:\r\n\r\n    ```powershell\r\n\t$msg = $inbox | Get-Message -From \"x@gmail.com\" | Receive-Message\r\n\t$msg.Body # returns the body of the message\r\n    ```\r\n\r\n### Move-Message\r\n\r\nMoves a message to a different mailbox or label. \r\n\r\nSupports automatic name completion for the existing labels.\r\n\r\n```powershell\r\nMove-Message -Session <ImapClient> -Message <MailMessage> [-Mailbox] <String> [<CommonParameters>]\r\n\r\nMove-Message -Session <ImapClient> -Message <MailMessage> -Label <String> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n`-Message` | ByValue\r\n`-Mailbox` | No\r\n`-Label`   | No\r\n\r\n#### Examples\r\n\r\n1. Move the message to the `All Mail` mailbox:\r\n\r\n    ```powershell\r\n    $msg | Move-Message \"All Mail\"\r\n    ```\r\n\r\n2. Move the message to the `Test` label:\r\n\r\n    ```powershell\r\n\t$msg | Move-Message -Label \"Test\"\r\n    ```\r\n\r\n### Remove-Message\r\n\r\nSends a message to the Gmail's `Trash` folder.\r\n\r\n```powershell\r\nRemove-Message [-Session] <ImapClient> [-Message] <MailMessage> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n`-Message` | ByValue\r\n\r\n#### Examples\r\n\r\n1. Delete all emails from X:\r\n\r\n    ```powershell\r\n\t$inbox | Get-Message -From \"x@gmail.com\" | Remove-Message\r\n    ```\r\n\r\n### Measure-Message\r\n\r\nReturns the number of messages in a mailbox (supports labels too).\r\n\r\n> **Alias:** `Count-Message`\r\n\r\n```powershell\r\nMeasure-Message [-Session] <ImapClient> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n\r\n#### Examples\r\n\r\n1. Count the messages in the inbox:\r\n\r\n    ```powershell\r\n\t$inbox | Measure-Message\r\n    ```\r\n\r\n2. Count the important messages:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox \"Important\" | Measure-Message\r\n    ```\r\n\r\n3. Note that `Measure-Message` will return the number of all messages in the selected mailbox, not the number of the returned messages (if any). To count the returned messages, use `Measure-Object`. For example if we have 2 unread and 98 read messages in the `Important` mailbox:\r\n\r\n    ```powershell\r\n    # returns 100, the number of messages in `Important`\r\n\t$gmail | Get-Mailbox \"Important\" | Get-Message -Unread | Measure-Message\r\n\r\n\t# returns 2, the number of unread messages in `Important`\r\n\t$gmail | Get-Mailbox \"Important\" | Get-Message -Unread | Measure-Object\r\n    ```\r\n\r\n### Get-Conversation\r\n\r\nReturns a list of messages that are part of a conversation.\r\n\r\n> **Alias:** `Get-Thread`\r\n\r\n```powershell\r\nGet-Conversation [-Session] <ImapClient> [-Message] <MailMessage> [-Prefetch] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName        | Pipeline input\r\n---         | ---\r\n`-Session`  | ByValue, ByPropertyName\r\n`-Message`  | ByValue\r\n`-Prefetch` | No\r\n\r\n#### Examples\r\n\r\n1. Search the Inbox based on the message returned by [`Get-Message`](#get-message), \r\n   and return all messages that are part of that conversaton and are in the Inbox:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox \"Inbox\" | Get-Message -From \"z@gmail.com\" | Get-Conversaion\r\n    ```\r\n\r\n2. Search \"All Mail\" based on the message returned by [`Get-Message`](#get-message), \r\n   and return all messages that are part of that conversaton:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox \"All Mail\" | Get-Message -From \"z@gmail.com\" | Get-Conversaion\r\n    ```\r\n\r\n### Save-Attachment\r\n\r\nDownloads the attachments of a message to a local folder.\r\n\r\n```powershell\r\nSave-Attachment [-Message <MailMessage>] [-Path] <String[]> [-PassThru ] [<CommonParameters>]\r\n\r\nSave-Attachment [-Message <MailMessage>] -LiteralPath <String[]> [-PassThru ] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName           | Pipeline input\r\n---            | ---\r\n`-Message`     | ByValue\r\n`-Path`        | No\r\n`-LiteralPath` | No\r\n`-PassThru`    | No\r\n\r\n#### Examples\r\n\r\n1. Save all attachments in the \"Important\" label to a local folder. \r\n   Note that without the `-Prefetch` parameter, no attachments will be downloaded:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Mailbox -Label \"Important\" | Get-Message -Prefetch | Save-Attachment $folder\r\n    ```\r\n\r\n2. Save just the first attachment from the newest unread email:\r\n\r\n    ```powershell\r\n\t$msg = $inbox | Get-Message -Unread -HasAttachment | Select-Object -Last 1\r\n    $fetchedMsg = $msg | Receive-Message # or use -Prefetch on Get-Message above\r\n    $fetchedMsg.Attachments[0].Save($location)\r\n    ```\r\n\r\n### Get-Label\r\n\r\nReturns the labels applied to a message or all labels that exist.\r\n\r\n```powershell\r\nGet-Label -Session <ImapClient> [-Message <MailMessage>] [[-Like] <String>] [-All ] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName (Alias)      | Pipeline input\r\n---               | ---\r\n`-Session`        | ByValue, ByPropertyName\r\n`-Message`        | ByValue\r\n`-Like` (`-Name`) | No\r\n`-All`            | No\r\n\r\n#### Examples\r\n\r\n1. Get all labels applied to a message:\r\n\r\n    ```powershell\r\n\t$msg | Get-Label\r\n    ```\r\n\r\n2. Get a list of the defined labels:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Label\r\n    ```\r\n\r\n3. Check if a label exists:\r\n\r\n    ```powershell\r\n\t$gmail | Get-Label -Name \"SomeLabel\" # returns null if the label doesn't exist\r\n\t```\r\n\r\n### New-Label\r\n\r\nCreates a new label.\r\n\r\n```powershell\r\nNew-Label [-Name] <String[]> -Session <ImapClient> [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Name`    | No\r\n`-Session` | ByValue, ByPropertyName\r\n\r\n### Set-Label\r\n\r\nApplies a label to a message.\r\n\r\nSupports automatic name completion for the existing labels.\r\n\r\n> **Alias:** `Add-Label`\r\n\r\n```powershell\r\nSet-Label -Session <ImapClient> -Message <MailMessage> [-Name] <String[]> [-Force ] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Session` | ByValue, ByPropertyName\r\n`-Message` | ByValue\r\n`-Name`    | No\r\n`-Force`   | No\r\n\r\n#### Examples\r\n\r\n1. Apply a single or multiple labels:\r\n\r\n\t```powershell\r\n\t$msg | Set-Label \"Important\"\r\n\t$msg | Set-Label \"Important\",\"Banking\"\r\n\t```\r\n\r\n2. The example above will raise error if one of the specified labels doesn't exist. To avoid that, label creation can be forced:\r\n\r\n    ```powershell\r\n\t$msg | Set-Label \"Important\",\"Banking\" -Force\r\n    ```\r\n\r\n### Remove-Label\r\n\r\nRemoves a label from a message or deletes the label from the account.\r\n\r\nSupports automatic name completion for the existing labels.\r\n\r\n```powershell\r\nRemove-Label [-Name] <String[]> -Session <ImapClient> [-Message <MailMessage>] [<CommonParameters>]\r\n```\r\n\r\n#### Parameters\r\n\r\nName       | Pipeline input\r\n---        | ---\r\n`-Name`    | No\r\n`-Session` | ByValue, ByPropertyName\r\n`-Message` | ByValue\r\n\r\n## Roadmap\r\n\r\n* Write tests\r\n* Send mail via Google's SMTP servers\r\n* Backup/restore all messages and labels\r\n\r\n## History\r\n\r\nCheck [Release](https://github.com/nikoblag/Gmail.ps/releases) list.\r\n\r\n## Author\r\n\r\n* Nikolay Blagoev [https://github.com/nikoblag]\r\n\r\n## Third Party Libraries\r\n\r\n* [AE.Net.Mail](https://github.com/andyedinborough/aenetmail) library - Copyright (c) 2013 [Andy Edinborough](https://github.com/andyedinborough)\r\n* [Get-StoredCredential](https://gist.github.com/toburger/2947424) cmdlet - Copyright (c) 2012 [Tobias Burger](https://github.com/toburger)\r\n\r\n## Contributing\r\n\r\n1. Fork it.\r\n2. Create a branch (`git checkout -b my_feature`)\r\n3. Commit your changes (`git commit -am \"Added Feature\"`)\r\n4. Push to the branch (`git push origin my_feature`)\r\n5. Open a [Pull Request](https://github.com/nikoblag/Gmail.ps/compare/)\r\n6. Enjoy an ice cream and wait\r\n\r\n## License\r\n\r\n[MIT License](https://github.com/nikoblag/Gmail.ps/blob/master/LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}